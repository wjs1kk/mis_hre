<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.jnv.sm.user.service.UserManageDAO">

    <select id="getUserManageList" parameterType="map" resultType="UserManageVO">
        /*user-manage-mapper.getuserManageList*/
        SELECT M.USER_ID
             , M.MEMBER_ID
             , M.USER_NM_KR
             , M.USER_NM_EN
             , P.EML_ADDR AS EMAIL_ADDR
             , P.OFC_TELNO AS TEL_NO
             , P.MBL_TELNO AS PHONE_NO
             , M.USE_YN
             , M.RGST_ID
             , (SELECT USER_NM_KR FROM CMN_USER WHERE USER_ID = M.RGST_ID) AS RGST_NM
             , M.RGST_IP
             , TO_CHAR(M.RGST_DT, 'YYYY-MM-DD') AS RGST_DT
             , M.UPDT_ID
             , M.UPDT_IP
             , M.UPDT_DT
             , P.OGDP_DEPT_NM AS DEPT_NM
             , P.JBPS_NM AS JOB_POSITION
             , TO_CHAR(M.PW_EXPIRE_DT, 'YYYY-MM-DD') AS PW_EXPIRE_DT
             , P.JOIN_APRV_STTS
             , (SELECT LINE_CODE_NM_KR
                  FROM CMN_CODE_LINE
                 WHERE SYS_ID = 'PMS'
                   AND MODULE_ID = 'MI'
                   AND HEADER_CODE = 'APRV_STTS'
                   AND LINE_CODE = JOIN_APRV_STTS) AS JOIN_APRV_STTS_NM
          FROM CMN_USER M
          JOIN PTS_MEMBER P
            ON M.MEMBER_ID = P.MEMBER_ID
        <where>
            <if test="memberId != null and memberId != ''">
           AND M.MEMBER_ID LIKE '%'|| #{memberId} || '%'
            </if>
            <if test="userNmKr != null and userNmKr != ''">
           AND USER_NM_KR LIKE '%' || #{userNmKr} || '%'
            </if>
            <if test="jobPosition != null and jobPosition != ''">
           AND P.JBPS_NM LIKE '%' || #{jobPosition} || '%'
            </if>
        </where>
         ORDER BY M.MEMBER_ID
    </select>

    <select id="getUserManageItem">
        SELECT CU.USER_ID
             , CU.MEMBER_ID
             , CU.USER_NM_KR
             , CU.USER_NM_EN
             , PM.PASSWD AS ORIG_PASSWD
             , PM.EML_ADDR AS EMAIL_ADDR
             , PM.OFC_TELNO AS TEL_NO
             , PM.MBL_TELNO AS PHONE_NO
             , PM.JBPS_NM AS JOB_POSITION
             , PM.OGDP_DEPT_NM AS DEPT_NM
             , CU.USE_YN
             , CU.RGST_ID
             , CU.RGST_IP
             , CU.RGST_DT
             , CU.UPDT_ID
             , CU.UPDT_IP
             , CU.UPDT_DT
             , CU.PW_EXPIRE_DT
          FROM CMN_USER CU
          JOIN PTS_MEMBER PM
               ON CU.MEMBER_ID = PM.MEMBER_ID
         WHERE CU.USER_ID = #{userId}
    </select>

    <insert id="insertUserManage" parameterType="UserManageVO">
        /* user-manage-mapper.insertUserManage */
        INSERT INTO CMN_USER (USER_ID,
                              MEMBER_ID,
                              USER_NM_KR,
                              USER_NM_EN,
                              USE_YN,
                              PW_EXPIRE_DT,
                              IN_OUT_DIV,
                              RGST_ID,
                              RGST_IP,
                              RGST_DT,
                              UPDT_ID,
                              UPDT_IP)
        VALUES (NULLIF(#{userId}, ''),
                NULLIF(#{memberId}, ''),
                NULLIF(#{userNmKr}, ''),
                NULLIF(#{userNmEn}, ''),
                'Y',
                DATE_TRUNC('day', NOW()) + (INTERVAL '6 months'),
                'I',
                NULLIF(#{sessionUserId}, ''),
                NULLIF(#{sessionUserIp}, ''),
                NOW(),
                NULLIF(#{sessionUserId}, ''),
                NULLIF(#{sessionUserIp}, ''))
    </insert>

    <insert id="insertMember">
        INSERT INTO PTS_MEMBER (
            MEMBER_ID,
            MEMBER_NM_KR,
            PASSWD,
            EML_ADDR,
            OFC_TELNO,
            MBL_TELNO,
            APPLY_DT,
            WHDWL_YN,
            CORP_YN,
            USE_YN,
            JOIN_APRV_STTS,
            JOIN_AUTZR,
            JOIN_APRV_DT,
            RGST_ID,
            RGST_DT,
            RGST_IP,
            UPDT_ID,
            UPDT_DT,
            UPDT_IP,
            JBPS_NM,
            OGDP_DEPT_NM)
        VALUES (
            NULLIF(#{memberId}, ''),
            NULLIF(#{userNmKr}, ''),
            NULLIF(#{passwd}, ''),
            NULLIF(#{emailAddr}, ''),
            NULLIF(#{telNo}, ''),
            NULLIF(#{phoneNo}, ''),
            NOW(),
            'N',
            'N',
            'Y',
            'Y',
            NULLIF(#{sessionUserId}, ''),
            NOW(),
            NULLIF(#{sessionUserId}, ''),
            NOW(),
            NULLIF(#{sessionUserIp}, ''),
            NULLIF(#{sessionUserId}, ''),
            NOW(),
            NULLIF(#{sessionUserIp}, ''),
            NULLIF(#{jobPosition}, ''),
            NULLIF(#{deptNm}, '')
        )
    </insert>

    <update id="updateUserManage" parameterType="UserManageVO">
        /* user-manage-mapper.updateUserManage */
        UPDATE CMN_USER
           SET USER_NM_KR   = NULLIF(#{userNmKr}, , '')
        <if test='passwd != null and passwd != ""'>
             , PW_EXPIRE_DT = DATE_TRUNC('day', NOW()) + INTERVAL '6 months'
        </if>
             , USE_YN       = NULLIF(#{useYn}, '')
             , UPDT_ID      = NULLIF(#{sessionUserId}, '')
             , UPDT_IP      = NULLIF(#{sessionUserIp}, '')
             , UPDT_DT      = NOW()
         WHERE USER_ID      = #{userId}
    </update>

    <update id="updateMember">
        /* user-manage-mapper.updateMember */
        UPDATE PTS_MEMBER
           SET EML_ADDR     = NULLIF(#{emailAddr}, '')
             , OFC_TELNO    = NULLIF(#{telNo}, '')
             , MBL_TELNO    = NULLIF(#{phoneNo}, '')
             , JBPS_NM      = NULLIF(#{jobPosition}, '')
             , OGDP_DEPT_NM = NULLIF(#{deptNm}, '')
        <if test='passwd != null and passwd != ""'>
             , PASSWD       = NULLIF(#{passwd}, '')
        </if>
             , UPDT_ID      = NULLIF(#{sessionUserId}, '')
             , UPDT_IP      = NULLIF(#{sessionUserIp}, '')
             , UPDT_DT      = NOW()
         WHERE MEMBER_ID = #{memberId}
    </update>

    <delete id="deleteUserManage" parameterType="UserManageVO">
        /* user-manage-mapper.deleteUserManage */
        DELETE FROM CMN_USER
         WHERE USER_ID = #{userId}
    </delete>

    <delete id="deleteMember">
        /* user-manage-mapper.deleteMember */
        DELETE FROM PTS_MEMBER
         WHERE MEMBER_ID = #{memberId}
    </delete>

    <select id="getMemberIdExists">
        SELECT CASE COUNT(*)
                   WHEN 0 THEN FALSE
                   ELSE TRUE
               END AS VAL
          FROM CMN_USER
         WHERE MEMBER_ID = #{memberId}
    </select>

    <select id="getRegistInfo" parameterType="map" resultType="memberRegistrationApprovalVO">
        /* user-manage-mapper.getRegistInfo */
        SELECT PM.MEMBER_ID, PM.MEMBER_NM_KR, PM.MEMBER_NM_EN, PM.PASSWD, PM.OGDP_INST_CD, PM.OGDP_INST_NM, PM.EML_ADDR
             , PM.OFC_TELNO, PM.OFC_FXNO, PM.MBL_TELNO, PM.PRVC_CLCT_AGRE_YN, PM.PRVC_PVSN_AGRE_YN, PM.APPLY_DT
             , PM.APPLY_CONT, PM.JOIN_APRV_STTS, PM.JOIN_AUTZR, PM.JOIN_APRV_DT, PM.CORP_YN, PM.JBPS_CD, PM.JBPS_NM
             , PM.OGDP_DEPT_CD, PM.OGDP_DEPT_NM, PM.MBR_ZIP, PM.MBR_ADDR, PM.MBR_DADDR, PM.OFC_ZIP, PM.OFC_ADDR
             , PM.OFC_DADDR, PM.WHDWL_YN, PM.USE_YN, PM.RGST_ID, PM.RGST_DT, PM.RGST_IP, PM.UPDT_ID, PM.UPDT_DT
             , PM.UPDT_IP, CU.USER_ID
             , ARRAY_TO_STRING(ARRAY[PM.MBR_ZIP, PM.MBR_ADDR, PM.MBR_DADDR], CHR(10)) AS MBR_ADDR_MERGED
             , ARRAY_TO_STRING(ARRAY[PM.OFC_ZIP, PM.OFC_ADDR, PM.OFC_DADDR], CHR(10)) AS OFC_ADDR_MERGED
             , (SELECT LINE_CODE_NM_KR
                  FROM CMN_CODE_LINE
                 WHERE SYS_ID = 'PMS'
                   AND MODULE_ID = 'MI'
                   AND HEADER_CODE = 'APRV_STTS'
                   AND LINE_CODE = JOIN_APRV_STTS)
          FROM PTS_MEMBER PM
          JOIN CMN_USER CU
            ON PM.MEMBER_ID = CU.MEMBER_ID
         WHERE CU.USER_ID = #{userId}
    </select>

    <update id="updateRegistStatus" parameterType="memberRegistrationApprovalVO">
        /* user-manage-mapper.updateRegistStatus */
        UPDATE PTS_MEMBER
           SET JOIN_APRV_STTS = NULLIF(#{joinAprvStts}, '')
             , USE_YN = CASE #{joinAprvStts}
                            WHEN 'APPROVAL' THEN 'Y'
                            ELSE 'N'
                        END
         WHERE MEMBER_ID = (SELECT MEMBER_ID FROM CMN_USER WHERE USER_ID = #{userId})
    </update>

    <update id="updateUserStatus">
        /* user-manage-mapper.updateUserStatus */
        UPDATE CMN_USER
           SET USE_YN = CASE #{joinAprvStts}
                            WHEN 'APPROVAL' THEN 'Y'
                            ELSE 'N'
                        END
         WHERE USER_ID = #{userId}
    </update>
</mapper>
