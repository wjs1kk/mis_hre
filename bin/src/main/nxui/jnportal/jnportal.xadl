<?xml version="1.0" encoding="utf-8"?>
<ADL version="2.0">
  <Application id="jnportal" screenid="Desktop_screen" onload="Application_onload" licenseurl="NexacroN_client_license.xml">
    <Layout>
      <MainFrame id="mainframe" showtitlebar="true" showstatusbar="true" left="0" top="0" width="1920" height="720" titletext="JnPortal">
        <VFrameSet id="VFrameSet" separatesize="111,35,*,100" border="0px none" showtitlebar="false" showtitleicon="false">
          <Frames>
            <ChildFrame id="TopFrame" showtitlebar="false" showstatusbar="false" formurl="FrameBase::Form_Top.xfdl" dragmovetype="none" border="0px none"/>
            <ChildFrame id="TabBarFrame" formurl="FrameBase::Form_TabBar.xfdl" showtitleicon="false" showtitlebar="false" dragmovetype="none"/>
            <FrameSet id="MainFrameSet" border="0px none">
              <Frames/>
            </FrameSet>
            <ChildFrame id="FooterFrame" formurl="FrameBase::Form_Footer.xfdl" showtitlebar="false" showtitleicon="false" dragmovetype="none"/>
          </Frames>
        </VFrameSet>
      </MainFrame>
    </Layout>
    <Style url="xcssrc::Form_TabBar.xcss"/>
    <Style url="xcssrc::Form_Top.xcss"/>
    <Style url="xcssrc::Form_TabContent.xcss"/>
    <Style url="xcssrc::GUIDE.xcss"/>
    <Style url="xcssrc::Form_Left.xcss"/>
    <Style url="xcssrc::portal.xcss"/>
  </Application>
  <Script type="xscript5.1"><![CDATA[/**
*  컨설팅 표준화 작업
*  @MenuPath
*  @FileName
*  @Creator 	parkmg (ref. soojeong)
*  @CreateDate 	2023.01.30
*  @Desction
************** 소스 수정 이력 ***********************************************
*  date          	Modifier           Description
*******************************************************************************
*  2023.01.30     	parkmg 	           최초 생성  (ref. soojeong)
*******************************************************************************
*/

/************************************************************************************************
 * application 변수 선언 영역
************************************************************************************************/
this.gvVFrameSet	= "";
this.gvLoginFrame	= "";
this.gvHFrame      = "";
this.gvLeftFrame   = "";
this.gvVFrameSet1  = "";
this.gvTopFrame    = "";
this.gvWorkFrame   = "";
this.gvMainFrame   = "";
this.gvMdiFrame    = "";
this.gvExtCommonPath  = "";
this.gvIsComBtnUse = false;	//공통 버튼 사용유

this.gvMenuColumns = {
	menuId : "menuId",    //  MENU ID
	menuNm : "menuNm",
	pageUrl : "menuUrl",
	pageId : "pageId",    //PROGRAM_ID
	winId : "winId",      //윈도우(프레임)아이디(열린 메뉴의 윈도우 아이디)
	title : "title",
	menuUrl : "menuUrl",
	groupId : "groupId",
	menuArgs : "menuArgs", //메뉴파라메터
	menuLevel : "level"    //메뉴레벨
};

this.gvMax        = 8;     //열린 메뉴 최대 갯수
this.gvWorkWinkey = "";
this.gvWorkMenuNm = "";
this.gvWorkMenuId = "";
this.gvWorkTitle  = "";
this.gvRealTrace = trace;

/***********************************************************************************************
* Application EVENT 영역(onload, onbeforeclose)
/***********************************************************************************************/

/**
 * @description Applicaton onload시 처리내역
*/
this.Application_onload = function(obj:nexacro.Application,e:nexacro.LoadEventInfo)
{
	var objApp = nexacro.getApplication();

	// Frame 변수 저장
	this.gvVFrameSet	= objApp.mainframe.VFrameSet;                                			//VFrameSet
	this.gvTopFrame     = objApp.mainframe.VFrameSet.TopFrame;  								//TopFrame
	this.gvWorkFrame    = objApp.mainframe.VFrameSet.WorkFrame;         					    //WorkForm

// 	this.gvVFrameSet	= objApp.mainframe.VFrameSet;                                			//VFrameSet
// 	this.gvLoginFrame	= objApp.mainframe.VFrameSet.frameLogin; 				   				//LoginFrame
// 	this.gvHFrame       = objApp.mainframe.VFrameSet.HFrameSet;                      			//HFrame
// 	this.gvLeftFrame    = objApp.mainframe.VFrameSet.HFrameSet.frameLeft;            			//leftFrame
// 	this.gvVFrameSet1   = objApp.mainframe.VFrameSet.HFrameSet.VFrameSet1;           			//VFrameSet1
// 	this.gvTopFrame     = objApp.mainframe.VFrameSet.frameTop;  								//TopFrame
// 	this.gvWorkFrame    = objApp.mainframe.VFrameSet.HFrameSet.VFrameSet1.framesetWork;         //WorkForm
// 	this.gvMainFrame    = objApp.mainframe.VFrameSet.HFrameSet.VFrameSet1.frameMain;  			//mainform
// 	this.gvMdiFrame     = objApp.mainframe.VFrameSet.HFrameSet.VFrameSet1.frameNavi;  			//mdi frame

	// 접속경로 확인
	trace("===== 접속경로 : " + nexacro.getProjectPath());
    var nRunMode = 0;

	//로컬(파일)
	if (system.navigatorname == "nexacro")
	{
	    nRunMode = "0";
		objApp.mainframe.set_titletext("로컬(파일) - " + objApp.mainframe.titletext);
	}
	// 웹 접속
	else {
		var urlPath = window.location.protocol + "//" + window.location.host;
		var objEnv = nexacro.getEnvironment();

		// service URL 설정
		var objSrv = objEnv.services["svcurl"];
		//objSrv.set_url(urlPath+"/nexacro/");

		//로컬(웹)
	    if (objSrv.url.indexOf("localhost") > -1 || objSrv.url.indexOf("127.0.0.1") > -1 ) {
			nRunMode = "1";
			objApp.mainframe.set_titletext("로컬(웹)  - " + objApp.mainframe.titletext);
		}
		//운영
		else {
		    nRunMode = "2";

			// trace 정지 설정
			this.afnSetTraceMode(false);
		}
	}
	nexacro.setEnvironmentVariable("gvRunMode", nRunMode);

	// 로그인 화면 open
	//this.gvLoginFrame.set_formurl("frame::frameLogin.xfdl");
	//this.gvVFrameSet.set_separatesize("0,*,0,0");

	// 홈
};

/**
 * @description trace 재정의하여 trace로그 생성 방지
*/
this.afnSetTraceMode = function(bTrace)
{
	trace("★★ 운영접속시에는 trace 로그를 남기지 않도록 설정되었습니다.");

    nexacro.setEnvironmentVariable("gvTraceMode", bTrace);
    if (bTrace)
    {
		trace = this.gvRealTrace;
    }
    else {
        trace = function trace(){};
    }
}

/**
 * @description ESC 통신중단 방지(10월 16일 버전에서는 작동하지 않음)
*/
this.Application_onerror = function(obj:nexacro.Application,e:nexacro.ErrorEventInfo)
{
	trace("!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!Application_onerror!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!");
	trace("e.statuscode : " + e.statuscode);
	trace("e.errormsg : " + e.errormsg);

	// 사용자가 ESC키를 눌렀을 경우 ESC통신 중단 방지처리
	if (e.errorcode == -2147418039) {
		return true;
	}
};

this.openHomeTab = function ()
{
	var mainFrameSet = this.mainframe.VFrameSet.MainFrameSet;
	var tabBarFrame = this.mainframe.VFrameSet.TabBarFrame;
	var tabBar = tabBarFrame.form.tabBar;

	mainFrameSet.removeChild("home");

	var homeFrame = new nexacro.ChildFrame();
	homeFrame.init("home", null, null, 640, 480, null, null);
	mainFrameSet.addChild("home", homeFrame);
	homeFrame.set_openstatus("maximize");
	homeFrame.set_resizable(false);
	homeFrame.set_showtitlebar(false);
	homeFrame.set_showstatusbar(false);
	homeFrame.set_border("0px none");
	homeFrame.set_formurl("FrameBase::Form_Main.xfdl");
	homeFrame.show();

	mainFrameSet.frames["home"].setFocus();
	nexacro.getApplication().mainframe.VFrameSet.set_separatesize("111,35,*,100");
};

this.openNewTab = function (tabId: string, title: string, url: string, param: Object, menuPath: menuPath, menuId: string)
{
	var mainFrameSet = this.mainframe.VFrameSet.MainFrameSet;
	var tabBarFrame = this.mainframe.VFrameSet.TabBarFrame;
	var tabBar = tabBarFrame.form.tabBar;

	var i = tabBar.insertTabpage(tabId, -1, "", title);
	if (i >= 0) {
		tabBar.tabpages[tabId].set_tooltiptext(title);

		var tabArgs = { tabId: tabId, title: title, url: url, param: param, menuPath: menuPath, menuId: menuId };
		var frame = new nexacro.ChildFrame();
		frame.init(tabId, 0, 0, 640, 480, null, null);
		mainFrameSet.addChild(tabId, frame);
		frame.set_openstatus("maximize");
		frame.set_resizable(false);
		frame.set_showtitlebar(false);
		frame.set_showstatusbar(false);
		frame.set_border("0px none");
		frame.set_formurl("FrameBase::Form_TabContent.xfdl");
		frame.tabArgs = tabArgs;
		frame.show();
	} else {
		for (var j = 0; j < tabBar.tabpages.length; j++) {
			if (tabBar.tabpages[j].id === tabId) {
				i = j;
			}
		}
		if (i >= 0) {
			tabBar.set_tabindex(i);
		}
	}
	mainFrameSet.frames[tabId].setFocus();
	nexacro.getApplication().mainframe.VFrameSet.set_separatesize("111,35,*,0");
};

this.changeTab = function (tabId: string)
{
	var mainFrameSet = this.mainframe.VFrameSet.MainFrameSet;
	var tabBarFrame = this.mainframe.VFrameSet.TabBarFrame;
	var tabBar = tabBarFrame.form.tabBar;
	var index = -1;

	for (var i = 0; i < tabBar.tabpages.length; i++) {
		if (tabBar.tabpages[i].id === tabId) {
			index = i;
		}
	}

	if (index >= 0) {
		if (tabBar.tabindex != index) {
			tabBar.set_tabindex(index);
		}
		mainFrameSet.frames[tabId].setFocus();
	}

	nexacro.getApplication().mainframe.VFrameSet.set_separatesize("111,35,*,0");
};

this.closeTab = function (tabId: string)
{
	var mainFrameSet = this.mainframe.VFrameSet.MainFrameSet;
	var tabBarFrame = this.mainframe.VFrameSet.TabBarFrame;
	var tabBar = tabBarFrame.form.tabBar;
	var index = -1;

	for (var i = 0; i < tabBar.tabpages.length; i++) {
		if (tabBar.tabpages[i].id === tabId) {
			index = i;
		}
	}

	if (index >= 0) {
		var frame = mainFrameSet.frames[tabId];
		tabBar.removeTabpage(index);
		mainFrameSet.removeChild(tabId);
		frame.destroy();
	}

	if (tabBar.tabpages.length == 0) {
		this.openHomeTab();
	} else {
		var focusedTabId = tabBar.tabpages[tabBar.tabindex].id;
		this.changeTab(focusedTabId);
	}
};

this.closeAllTab = function ()
{
	var mainFrameSet = this.mainframe.VFrameSet.MainFrameSet;
	var tabBarFrame = this.mainframe.VFrameSet.TabBarFrame;
	var tabBar = tabBarFrame.form.tabBar;

	for (var i = tabBar.tabpages.length - 1; i >= 0; i--) {
		var tabId = tabBar.tabpages[i].id;
		var frame = mainFrameSet.frames[tabId];
		tabBar.removeTabpage(i);
		mainFrameSet.removeChild(tabId);
		frame.destroy();
	}

	this.openHomeTab();
};

this.goPage = function(menuId, url)
{
	var mainFrameSet = this.mainframe.VFrameSet.MainFrameSet;
	var tabBarFrame = this.mainframe.VFrameSet.TabBarFrame;
	var tabBar = tabBarFrame.form.tabBar;
	var objChildFrame = new ChildFrame();

	if(tabBar.tabpages.length > 0){
		this.closeAllTab();
	}

	mainFrameSet.frames["home"].setFocus();
	mainFrameSet.removeChild("home");

	objChildFrame.init(menuId, null, null, 640, 480, null, null);
	mainFrameSet.addChild("home", objChildFrame);
	objChildFrame.set_openstatus("maximize");
	objChildFrame.set_resizable(false);
	objChildFrame.set_showtitlebar(false);
	objChildFrame.set_showstatusbar(false);
	objChildFrame.set_border("0px none");
	objChildFrame.set_formurl(url);
	objChildFrame.show();
	nexacro.getApplication().mainframe.VFrameSet.set_separatesize("111,35,*,100");
}

this.logout = function ()
{
    const baseUrl = nexacro.getEnvironment().services["svcurl"].url;
    this.transaction("logout", baseUrl + "logout", "", "", "", "fnLogoutCallback");
};

this.reloadSessionInfo = function ()
{
    this.mainframe.VFrameSet.TopFrame.form.fnLoadSessionInfo();
    this.closeAllTab();
};

this.fnLogoutCallback = function (svcId, errorCode, errorMsg)
{
    if (svcId === "logout") {
        this.reloadSessionInfo();
    }
};

this.fnReloadFavoriteMenu = function ()
{
    const svcUrl = nexacro.getEnvironment().services["svcurl"].url;
	this.transaction("getFavoriteMenu", svcUrl + "cmn/favorite/getFavoriteMenu.do", "", "gdsFavoriteMenu=dsFavoriteMenu", "", "");
};

/*
 ===============================================================================
 == Frame과 onload 관련된 공통함수들은 여기에 작성한다.
 ===============================================================================
     ====MDI관련
 ● gfnCreateMegaMenu					: 탑메뉴의 메가메뉴를 생성한다.
 ● gfnOpenMegaMenu						: 탑메뉴의 메가메뉴를 연다.
 ● gfnCloseMegaMenu					: 탑메뉴의 메가메뉴를 닫는다.

*/

var pForm  = nexacro.Form.prototype
/**
 * gfnCreateMegaMenu : 메가메뉴를 생성한다..
 * @param {object} oForm : popupdiv가 열릴 부모화면
 * @return : N/A
 * @example :
 */
pForm.gfnCreateMegaMenu = function(oForm)
{
    if (this.pdivMegaMenu) {
        dataset = nexacro.getApplication().gdsMenu;
        var nWidth = this.getOffsetWidth();
        this.pdivMegaMenu.form.dsMenu.copyData(dataset,true);
        this.pdivMegaMenu.form.fnDrawMenu();
    } else {
        // Create Object
        var objCompId = "pdivMegaMenu";
        var objPopupDiv = new PopupDiv();

        objPopupDiv.init(objCompId, 0, 0, null, 560, 0);
        objPopupDiv.set_url("FrameBase::Form_MegaMenu.xfdl");
        objPopupDiv.set_cssclass("pdiv_TF_Area");
        objPopupDiv.set_formscrolltype('vertical');
        objPopupDiv.addEventHandler("oncloseup", this._gfnMegaMenuOncloseup, this);
        // Add Object to Parent Form
        this.addChild(objCompId, objPopupDiv);

        // Show Object
        objPopupDiv.show();
    }
}

/**
 * gfnOpenMegaMenu : 메가메뉴를 열어준다.
 * @param {object} oForm : popupdiv가 열리는 부모화면
 * @return : N/A
 * @example :
 */
pForm.gfnOpenMegaMenu = function(oForm)
{
	var nWidth = this.getOffsetWidth();
	var nHeight = this.getOffsetWidth();
	//오픈
	oForm.components["pdivMegaMenu"].trackPopupByComponent(oForm,0,0,nWidth,nHeight);

	/* 가장 첫번째 메뉴에 sta_WF_navTitle_S 로 포커스를 준다. */
	var menuId = "DTD1";
	var staObj;

	for(var objSta in oForm.components["pdivMegaMenu"].form.components)
	{
		staObj = oForm.components["pdivMegaMenu"].form.components[objSta];
		if( String(staObj.name).indexOf("L_") == 0)
		{
			if( menuId > String(staObj.id).replace("L_sta", ""))
			{
				menuId = String(staObj.id).replace("L_sta", "");
			}
		}
	}

	//oForm.components["pdivMegaMenu"].form.components["L_sta" + menuId].set_cssclass("megaTitle1");
}

/**
 * gfnCloseMegaMenu : 메가메뉴를 닫아준다.
 * @return : N/A
 * @example :
 */
pForm.gfnCloseMegaMenu = function()
{
	var objTarget = this;

	while(true)
	{
		if(objTarget instanceof PopupDiv)
		{
			objTarget.closePopup();
			break;
		}
		else
		{
			objTarget = objTarget.parent;
		}
	}

	return true;
}]]></Script>
</ADL>
